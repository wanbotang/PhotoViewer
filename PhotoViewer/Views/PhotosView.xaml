<UserControl
    x:Class="PhotoViewer.Views.PhotosView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:viewModel="clr-namespace:PhotoViewer.ViewModels"
    xmlns:behavior="clr-namespace:PhotoViewer.Behaviors"
    d:DataContext="{d:DesignInstance Type=viewModel:PhotosViewModel}"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800"
>
    <UserControl.Resources>
        <!--Data template for photo thumbnail-->
        <DataTemplate DataType="{x:Type viewModel:PhotoViewModel}">
            <Image Source="{Binding Thumbnail}" />
        </DataTemplate>

        <!--Styles for previous and next buttons-->
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                        >
                            <ContentPresenter SnapsToDevicePixels="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Duration="0:0:0.5"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Duration="0:0:0.5"
                                    Storyboard.TargetProperty="Opacity"
                                />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PreviousButtonStyle" TargetType="Button" BasedOn="{StaticResource CustomButtonStyle}">
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>

        <Style x:Key="NextButtonStyle" TargetType="Button" BasedOn="{StaticResource CustomButtonStyle}">
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <!--Styles for photo list box-->
        <SolidColorBrush x:Key="ListBoxBackground" Color="#C7404040" />
        <SolidColorBrush x:Key="ListBoxBorder" Color="#404040" />
        <SolidColorBrush x:Key="ListBoxItemBackgroundNormal" Color="#80808080" />
        <SolidColorBrush x:Key="ListBoxItemBackgroundMouseOver" Color="#80C1C1C1" />
        <SolidColorBrush x:Key="ListBoxItemBorderNormal" Color="Transparent" />
        <SolidColorBrush x:Key="ListBoxItemBorderSelected" Color="#4CC2FF" />

        <Style x:Key="PhotoListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Background"
                    Value="{DynamicResource ListBoxItemBackgroundNormal}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ListBoxItemBorderNormal}" />
            <Setter Property="Width" Value="64" />
            <Setter Property="Height" Value="64" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            CornerRadius="5"
                            Margin="{TemplateBinding Margin}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                        >
                            <ContentPresenter />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource ListBoxItemBackgroundMouseOver}" />
                            </Trigger>

                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource ListBoxItemBorderSelected}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PhotoListBoxStyle" TargetType="ListBox">
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Margin" Value="100,0,100,-100" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Background" Value="{DynamicResource ListBoxBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorder}" />
            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource PhotoListBoxItemStyle}" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border
                            CornerRadius="7"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                        >
                            <ScrollViewer Focusable="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding Path=DataContext.IsPhotoListVisible,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                    Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation
                                    Duration="0:0:0.5"
                                    Storyboard.TargetProperty="Margin"
                                    To="100,0,100,15" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation
                                    Duration="0:0:0.5"
                                    Storyboard.TargetProperty="Margin" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--Styles for scroll bar-->
        <Style x:Key="ScrollBarLineButtonStyle" TargetType="RepeatButton">
            <Setter Property="Opacity" Value=".5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                            <ContentPresenter />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="RepeatButton">
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Command" Value="ScrollBar.PageUpCommand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Rectangle Fill="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="Thumb">
            <Setter Property="Opacity" Value=".5" />
            <Setter Property="Padding" Value="0,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle
                            Margin="{TemplateBinding Padding}"
                            Fill="#B7B7B7"
                            SnapsToDevicePixels="True"
                        />

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Padding" Value="0,4" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="12" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition MaxWidth="12" />
                </Grid.ColumnDefinitions>

                <RepeatButton
                    Style="{DynamicResource ScrollBarLineButtonStyle}"
                    Command="ScrollBar.LineLeftCommand"
                    IsEnabled="{TemplateBinding IsMouseOver}"
                >
                    <Path Data="M5,0 L0,5 5,10 Z"
                          Stretch="Uniform"
                          Fill="#B7B7B7" />
                </RepeatButton>

                <Track Name="PART_Track" Grid.Column="1">
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Style="{DynamicResource ScrollBarPageButtonStyle}"
                            Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Style="{DynamicResource ScrollBarPageButtonStyle}"
                            Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource ScrollBarThumbStyle}"
                               IsEnabled="{TemplateBinding IsMouseOver}" />
                    </Track.Thumb>
                </Track>

                <RepeatButton
                    Style="{DynamicResource ScrollBarLineButtonStyle}"
                    Command="ScrollBar.LineRightCommand"
                    IsEnabled="{TemplateBinding IsMouseOver}"
                    Grid.Column="2" 
                >
                    <Path Data="M0,0 L5,5 0,10 Z"
                          Stretch="Uniform"
                          Fill="#B7B7B7" />
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="ScrollBar">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Height" Value="12" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Background="Transparent">
        <!--Original image of the current photo-->
        <Image DataContext="{Binding Photos.Current}"
               MaxHeight="{Binding ImageHeight}"
               MaxWidth="{Binding ImageWidth}">
            <Image.Source>
                <PriorityBinding>
                    <Binding Path="Image" IsAsync="True" />
                    <Binding Path="Thumbnail" />
                </PriorityBinding>
            </Image.Source>
        </Image>

        <!--Switch to the previous photo-->
        <Button
            Style="{DynamicResource PreviousButtonStyle}"
            Command="{Binding MovePreviousCommand}"
        >
            <Border
                Height="48"
                Width="48"
                Margin="0,0,48,0"
                SnapsToDevicePixels="True"
            >
                <Polyline
                    Points="5,0 0,5 5,10"
                    Stroke="#FFFFFF"
                    StrokeThickness="3"
                    Stretch="Uniform"
                    SnapsToDevicePixels="True"
                />
            </Border>
        </Button>

        <!--Switch to the next photo-->
        <Button
            Style="{DynamicResource NextButtonStyle}"
            Command="{Binding MoveNextCommand}"
        >
            <Border
                Width="48"
                Height="48"
                Margin="48,0,0,0"
                SnapsToDevicePixels="True"
            >
                <Polyline
                    Points="0,0 5,5 0,10"
                    Stroke="#FFFFFF"
                    StrokeThickness="3"
                    Stretch="Uniform"
                    SnapsToDevicePixels="True"
                />
            </Border>
        </Button>

        <!--List of photos-->
        <ListBox
            Style="{DynamicResource PhotoListBoxStyle}"
            DataContext="{Binding Photos}"
            ItemsSource="{Binding}"
            SelectedIndex="{Binding Position}"
        >
            <i:Interaction.Behaviors>
                <behavior:AutoScrollListBoxBehavior />
            </i:Interaction.Behaviors>
        </ListBox>

        <i:Interaction.Triggers>
            <i:KeyTrigger Key="Left" FiredOn="KeyDown">
                <i:InvokeCommandAction Command="{Binding MovePreviousCommand}" />
            </i:KeyTrigger>
            <i:KeyTrigger Key="Right" FiredOn="KeyDown">
                <i:InvokeCommandAction Command="{Binding MoveNextCommand}" />
            </i:KeyTrigger>
            <i:EventTrigger EventName="MouseDown">
                <i:InvokeCommandAction Command="{Binding TogglePhotoListVisibleCommand}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </Grid>
</UserControl>
